{"version":3,"sources":["utils/index.js","layout/navigation/component/boll/detector.js","layout/navigation/component/boll/index.jsx","layout/navigation/index.jsx","layout/view/index.jsx","layout/index.jsx","index.js"],"names":["utils","os","navigator","userAgent","isWindowsPhone","test","isSymbian","isAndroid","isFireFox","isChrome","isPad","isPhone","isPc","detector","canvas","window","CanvasRenderingContext2D","webgl","document","createElement","WebGLRenderingContext","getContext","e","webgl2","WebGL2RenderingContext","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Boll","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","container","camera","scene","renderer","spheres","mouseX","mouseY","windowHalfX","innerWidth","windowHalfY","innerHeight","arrStr","loader","onWindowResize","bind","assertThisInitialized","setState","aspect","updateProjectionMatrix","setSize","event","_this$state","clientX","clientY","_this2","refs","THREE","position","z","setPath","concat","load","geometry","material","envMap","refractionRatio","mapping","font","forEach","textGeo","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","textMate","textMesh","castShadow","x","Math","random","y","scale","i","mesh","setPixelRatio","devicePixelRatio","addEventListener","render","Detector","add","push","domElement","init","animate","requestAnimationFrame","timer","Date","now","il","length","sphere","cos","sin","lookAt","react_default","a","react","ref","Component","Navigation","boll","View","App","component","u","BrowserRouter","Route","ReactDOM","layout","getElementById"],"mappings":"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","file":"static/js/main.5a332271.chunk.js","sourcesContent":["export default {\n    os() {\n        const os = navigator.userAgent;\n        const isWindowsPhone = /(?:Windows Phone)/.test(os);\n        const isSymbian = /(?:SymbianOS)/.test(os) || isWindowsPhone;\n        const isAndroid = /(?:Android)/.test(os);\n        const isFireFox = /(?:Firefox)/.test(os);\n        const isChrome = /(?:Chrome|CriOS)/.test(os);\n        const isPad = /(?:iPad|PlayBook)/.test(os) || (isAndroid && !/(?:Mobile)/.test(os)) || (isFireFox && /(?:Tablet)/.test(os));\n        const isPhone = /(?:iPhone)/.test(os) && !isPad;\n        const isPc = !isPhone && !isAndroid && !isSymbian;\n        return {\n            isPad: isPad,\n            isPhone: isPhone,\n            isAndroid: isAndroid,\n            isPc: isPc,\n            isChrome: isChrome\n        }\n    },\n    leftPad(str, len, ch) {\n        const cache = [\n            '',\n            ' ',\n            '  ',\n            '   ',\n            '    ',\n            '     ',\n            '      ',\n            '       ',\n            '        ',\n            '         '\n        ];\n        // convert `str` to a `string`\n        str = str + '';\n        // `len` is the `pad`'s length now\n        len = len - str.length;\n        // doesn't need to pad\n        if (len <= 0) return str;\n        // `ch` defaults to `' '`\n        if (!ch && ch !== 0) ch = ' ';\n        // convert `ch` to a `string` cuz it could be a number\n        ch = ch + '';\n        // cache common use cases\n        if (ch === ' ' && len < 10) return cache[len] + str;\n        // `pad` starts with an empty string\n        var pad = '';\n        // loop\n        while (true) {\n            // add `ch` to `pad` if `len` is odd\n            if (len & 1) pad += ch;\n            // divide `len` by 2, ditch the remainder\n            len >>= 1;\n            // \"double\" the `ch` so this operation count grows logarithmically on `len`\n            // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n            // similar to finding a value in binary search tree, hence O(log(n))\n            if (len) ch += ch;\n            // `len` is 0, exit the loop\n            else break;\n        }\n        // pad `str`!\n        return pad + str;\n    }\n}","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n\n  canvas: !!window.CanvasRenderingContext2D,\n  webgl: (function () {\n    try {\n      let canvas = document.createElement('canvas');\n      return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch (e) {\n      return false;\n    }\n  }()),\n  webgl2: (function () {\n    try {\n      let canvas = document.createElement('canvas');\n      return !!(window.WebGL2RenderingContext && (canvas.getContext('webgl2')));\n    } catch (e) {\n      return false;\n    }\n  }()),\n  workers: !!window.Worker,\n  fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n  getWebGLErrorMessage () {\n        var element = document.createElement('div')\n        element.id = 'webgl-error-message'\n        element.style.fontFamily = 'monospace'\n        element.style.fontSize = '13px'\n        element.style.fontWeight = 'normal'\n        element.style.textAlign = 'center'\n        element.style.background = '#fff'\n        element.style.color = '#000'\n        element.style.padding = '1.5em'\n        element.style.width = '400px'\n        element.style.margin = '5em auto 0'\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext ? [\n                'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n                'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n            ].join('\\n') : [\n                'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n                'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n            ].join('\\n')\n        }\n\n        return element\n    },\n\n  addGetWebGLMessage (parameters) {\n        var parent, id, element\n\n        parameters = parameters || {}\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body\n        id = parameters.id !== undefined ? parameters.id : 'oldie'\n\n        element = this.getWebGLErrorMessage()\n        element.id = id\n\n        parent.appendChild(element)\n    },\n\n};\n","import React, { Component, Fragment } from 'react';\nimport * as THREE from \"three\";\nimport Detector from './detector'\nimport './rest.css'\n\n\n// const THREE = require('three');\nclass Boll extends Component {\n    constructor() {\n        super()\n        this.state = {\n            container: null,\n            camera: null,\n            scene: null,\n            renderer: null,\n            spheres: [],\n            mouseX: 0,\n            mouseY: 0,\n            windowHalfX: window.innerWidth / 2,\n            windowHalfY: window.innerHeight / 2,\n            arrStr: [],\n            loader: null\n        }\n        this.onWindowResize=this.onWindowResize.bind(this)\n        // console.log(Detector);\n    }\n    onWindowResize() {\n        this.setState({\n            windowHalfX: window.innerWidth / 2,\n            windowHalfY: window.innerHeight / 2,\n            camera: { aspect: window.innerWidth / window.innerHeight },\n\n        })\n        this.state.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    onDocumentMouseMove(event) {\n        const { windowHalfX, windowHalfY } = this.state;\n\n        this.setState({\n            mouseX: (event.clientX - windowHalfX) * 10,\n            mouseY: (event.clientY - windowHalfY) * 10\n        })\n    }\n    init() {\n\n        const container = this.refs.container;\n        const fov = 60;\n        const aspect = window.innerWidth / window.innerHeight;\n        const near = 1;\n        const far = 10000;\n        const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n        camera.position.z = 3200;\n\n        const scene = new THREE.Scene();\n        const host = 'http://api.huzhihui.org.cn'\n\n        scene.background = new THREE.CubeTextureLoader()\n            .setPath(`${host}/file/image?name=`)\n            .load([\"px.jpg\", \"nx.jpg\", \"py.jpg\", \"ny.jpg\", \"pz.jpg\", \"nz.jpg\"]);\n        const geometry = new THREE.SphereBufferGeometry(100, 32, 16);\n        const material = new THREE.MeshBasicMaterial({\n            color: 0xffffff,\n            envMap: scene.background,\n            refractionRatio: 0.95\n        });\n        material.envMap.mapping = THREE.CubeRefractionMapping;\n        const arrStr = [\n            \"TigerZH\",\n            \"HzH\",\n            \"PRN\",\n            \"Ethan\",\n            \"wechat:huibikuile\",\n            \"TigerZH\",\n            \"HzH\",\n            \"HzH\"\n        ];\n\n        this.setState({\n            camera,\n            scene,\n            material,\n            arrStr,\n            container\n\n        }, () => {\n            const loader = new THREE.FontLoader();\n            loader.load(\n                \"https://easy-mock.com/mock/5a1fe521583969285ab1fa9a/getaway/typefont#!method=get\",\n                font => {\n                    arrStr.forEach(e => {\n                        const textGeo = new THREE.TextGeometry(e, {\n                            font,\n                            size: 300,\n                            height: 5,\n                            curveSegments: 12,\n                            bevelEnabled: true,\n                            bevelThickness: 10,\n                            bevelSize: 8,\n                            bevelSegments: 5\n                        });\n                        const textMate = new THREE.MeshPhongMaterial({\n                            color: 0xff0000,\n                            envMap: scene.background,\n                            refractionRatio: 0.95\n                        });\n                        const textMesh = new THREE.Mesh(textGeo, textMate);\n                        textMesh.castShadow = true;\n                        textMesh.position.x = Math.random() * 10000 - 5000;\n                        textMesh.position.y = Math.random() * 10000 - 5000;\n                        textMesh.position.z = Math.random() * 10000 - 5000;\n                        textMesh.scale.z = Math.random() * 3 + 1;\n                        textMesh.scale.y = textMesh.scale.z;\n                        textMesh.scale.x = textMesh.scale.y;\n                        // const newScence = JSON.parse(JSON.stringify(this.state.scene))\n                        // const newSpheres = JSON.parse(JSON.stringify(this.state.spheres))\n\n                        // newScence.add(textMesh);\n                        // newSpheres.add(textMesh);\n                        // this.setState({\n                        //     scene: newScence,\n                        //     spheres: newSpheres\n                        // })\n                    });\n                })\n\n            for (let i = 0; i < 400; i++) {\n                const mesh = new THREE.Mesh(geometry, material);\n                mesh.position.x = Math.random() * 10000 - 5000;\n                mesh.position.y = Math.random() * 10000 - 5000;\n                mesh.position.z = Math.random() * 10000 - 5000;\n                mesh.scale.z = Math.random() * 3 + 1;\n                mesh.scale.y = mesh.scale.z;\n                mesh.scale.x = mesh.scale.y;\n                // this.state.scence.add(mesh);\n                // this.state.spheres.add(mesh);\n                // this.setState({\n                //     scene,\n                //     spheres,\n                // })\n\n            }\n\n            const renderer = new THREE.WebGLRenderer();\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            // const newContainer = this.state.container;\n            // newContainer.appendChild(this.renderer.domElement)\n\n            window.addEventListener(\"resize\", this.onWindowResize, false);\n        })\n        // const loader = new THREE.FontLoader();\n        // loader.load(\n        //     \"https://easy-mock.com/mock/5a1fe521583969285ab1fa9a/getaway/typefont#!method=get\",\n        //     font => {\n        //         this.arrStr.forEach(e => {\n        //             const textGeo = new THREE.TextGeometry(e, {\n        //                 font,\n        //                 size: 300,\n        //                 height: 5,\n        //                 curveSegments: 12,\n        //                 bevelEnabled: true,\n        //                 bevelThickness: 10,\n        //                 bevelSize: 8,\n        //                 bevelSegments: 5\n        //             });\n        //             const textMate = new THREE.MeshPhongMaterial({\n        //                 color: 0xff0000,\n        //                 envMap: this.scene.background,\n        //                 refractionRatio: 0.95\n        //             });\n        //             const textMesh = new THREE.Mesh(textGeo, textMate);\n        //             textMesh.castShadow = true;\n        //             textMesh.position.x = Math.random() * 10000 - 5000;\n        //             textMesh.position.y = Math.random() * 10000 - 5000;\n        //             textMesh.position.z = Math.random() * 10000 - 5000;\n        //             textMesh.scale.z = Math.random() * 3 + 1;\n        //             textMesh.scale.y = textMesh.scale.z;\n        //             textMesh.scale.x = textMesh.scale.y;\n        //             const newScence = JSON.parse(JSON.stringify(this.state.scene))\n        //             const newSpheres = JSON.parse(JSON.stringify(this.state.spheres))\n        //             newScence.add(textMesh);\n        //             newSpheres.add(textMesh);\n        //             this.setState({\n        //                 scene: newScence,\n        //                 spheres: newSpheres\n        //             })\n        //         });\n        //     })\n\n        // for (let i = 0; i < 400; i++) {\n        //     const mesh = new THREE.Mesh(geometry, material);\n        //     mesh.position.x = Math.random() * 10000 - 5000;\n        //     mesh.position.y = Math.random() * 10000 - 5000;\n        //     mesh.position.z = Math.random() * 10000 - 5000;\n        //     mesh.scale.z = Math.random() * 3 + 1;\n        //     mesh.scale.y = mesh.scale.z;\n        //     mesh.scale.x = mesh.scale.y;\n        //     const newScence = JSON.parse(JSON.stringify(this.state.scene))\n        //     const newSpheres = JSON.parse(JSON.stringify(this.state.spheres))\n        //     newScence.add(mesh);\n        //     newSpheres.add(mesh);\n        //     this.setState({\n        //         scene: newScence,\n        //         spheres: newSpheres\n        //     })\n\n        // }\n\n        // const renderer = new THREE.WebGLRenderer();\n        // renderer.setPixelRatio(window.devicePixelRatio);\n        // renderer.setSize(window.innerWidth, window.innerHeight);\n        // const newContainer = JSON.parse(JSON.stringify(this.state.container))\n        // newContainer.appendChild(this.renderer.domElement)\n\n        // window.addEventListener(\"resize\", this.onWindowResize, false);\n\n\n\n    }\n  \n    animate() {\n        // this.requestAnimationFrame();\n        this.render();\n    }\n\n    componentDidMount() {\n  \n    if (!Detector.webgl) Detector.addGetWebGLMessage();\n    let container;\n    let camera;\n    let scene;\n    let renderer;\n    const spheres = [];\n    let mouseX = 0;\n    let mouseY = 0;\n    let windowHalfX = window.innerWidth / 2;\n    let windowHalfY = window.innerHeight / 2;\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n \n    function onDocumentMouseMove(event) {\n      mouseX = (event.clientX - windowHalfX) * 10;\n      mouseY = (event.clientY - windowHalfY) * 10;\n    }\n    document.addEventListener(\"mousemove\", onDocumentMouseMove, false);\n    container = this.refs.container;\n\n    function init() {\n      camera = new THREE.PerspectiveCamera(\n        60,\n        window.innerWidth / window.innerHeight,\n        1,\n        100000\n      );\n      camera.position.z = 3200;\n      scene = new THREE.Scene();\n      scene.background = new THREE.CubeTextureLoader()\n        .setPath(`http://api.huzhihui.org.cn/file/image?name=`)\n        .load([\"px.jpg\", \"nx.jpg\", \"py.jpg\", \"ny.jpg\", \"pz.jpg\", \"nz.jpg\"]);\n      const geometry = new THREE.SphereBufferGeometry(100, 32, 16);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0xffffff,\n        envMap: scene.background,\n        refractionRatio: 0.95\n      });\n      material.envMap.mapping = THREE.CubeRefractionMapping;\n      const arrStr = [\n        \"TigerZH\",\n        \"TigerZH\",\n        \"TigerZH\",\n        \"TigerZH\",\n        \"TigerZH\",\n        \"TigerZH\",\n        \"TigerZH\",\n        \"TigerZH\"\n      ];\n      const loader = new THREE.FontLoader();\n      loader.load(\n        \"https://easy-mock.com/mock/5a1fe521583969285ab1fa9a/getaway/typefont#!method=get\",\n        font => {\n          arrStr.forEach(e => {\n            const textGeo = new THREE.TextGeometry(e, {\n              font,\n              size: 300,\n              height: 5,\n              curveSegments: 12,\n              bevelEnabled: true,\n              bevelThickness: 10,\n              bevelSize: 8,\n              bevelSegments: 5\n            });\n            const textMate = new THREE.MeshPhongMaterial({\n              color: 0xff0000,\n              envMap: scene.background,\n              refractionRatio: 0.95\n            });\n            const textMesh = new THREE.Mesh(textGeo, textMate);\n            textMesh.castShadow = true;\n            textMesh.position.x = Math.random() * 10000 - 5000;\n            textMesh.position.y = Math.random() * 10000 - 5000;\n            textMesh.position.z = Math.random() * 10000 - 5000;\n            textMesh.scale.z = Math.random() * 3 + 1;\n            textMesh.scale.y = textMesh.scale.z;\n            textMesh.scale.x = textMesh.scale.y;\n            scene.add(textMesh);\n            spheres.push(textMesh);\n          });\n        }\n      );\n\n      for (let i = 0; i < 400; i++) {\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.position.x = Math.random() * 10000 - 5000;\n        mesh.position.y = Math.random() * 10000 - 5000;\n        mesh.position.z = Math.random() * 10000 - 5000;\n        mesh.scale.z = Math.random() * 3 + 1;\n        mesh.scale.y = mesh.scale.z;\n        mesh.scale.x = mesh.scale.y;\n\n        scene.add(mesh);\n        spheres.push(mesh);\n      }\n\n      //\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(renderer.domElement);\n      //\n      window.addEventListener(\"resize\", onWindowResize, false);\n    }\n\n    //\n\n    function render() {\n      const timer = 0.0001 * Date.now();\n      for (let i = 0, il = spheres.length; i < il; i++) {\n        const sphere = spheres[i];\n        sphere.position.x = 5000 * Math.cos(timer + i);\n        sphere.position.y = 5000 * Math.sin(timer + i * 1.1);\n      }\n      camera.position.x += (mouseX - camera.position.x) * 0.05;\n      camera.position.y += (-mouseY - camera.position.y) * 0.05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    }\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    init();\n    animate();\n       \n    }\n    render() {\n        return (\n            <Fragment>\n                <div ref=\"container\"></div>\n            </Fragment>\n        )\n    }\n}\nexport default Boll;","import React, { Component } from 'react';\nimport Boll from './component/boll'\n\nclass Navigation extends Component{\n    render (){\n        return (<div><Boll/></div>)\n    }\n}\nexport default Navigation;","import React , {Component} from 'react';\nclass View extends Component {\n    render(){\n        return (\n            <div>我是主页</div>\n        )\n    }\n}\n\nexport default View;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport u from 'utils'\nimport Navigation from 'layout/navigation'\nimport View from 'layout/view'\n\nclass App extends Component {\n    component(){\n        let component ;\n        const { isPc } = u.os();\n        if(isPc){\n            component=  Navigation;\n        }else{\n            component=  View;\n        }\n        return component;\n    }\n    render() {\n        return (\n            <BrowserRouter>\n                <Route component={this.component()}></Route>\n            </BrowserRouter>\n        )\n    }\n}\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'layout'\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}